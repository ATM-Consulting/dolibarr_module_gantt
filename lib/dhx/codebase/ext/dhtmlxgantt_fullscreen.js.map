{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./sources/ext/fullscreen.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getState","gantt","isExpanded","element","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","body","state","apply","this","arguments","fullscreen","expanded","backupElementSizes","width","height","modified","onFullScreenChange","$container","$root","offsetWidth","innerWidth","style","workaroundIESizing","setTimeout","callEvent","workaroundIESizingEnd","cantFullscreen","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","console","warning","log","event","expand","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","collapse","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen"],"mappings":"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","file":"ext/dhtmlxgantt_fullscreen.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 228);\n","(function() {\r\n\tvar getState = gantt.getState;\r\n\tgantt.getState = function () {\r\n\t\tvar state = getState.apply(this, arguments);\r\n\t\tstate.fullscreen = isExpanded();\r\n\t\treturn state;\r\n\t};\r\n\r\n\tfunction isExpanded(){\r\n\t\tvar element = (document.fullscreenElement ||\r\n\t\t\tdocument.mozFullScreenElement ||\r\n\t\t\tdocument.webkitFullscreenElement ||\r\n\t\t\tdocument.msFullscreenElement);\r\n\r\n\t\treturn element && element === document.body;\r\n\t}\r\n\r\n\tfunction isFullscreenAvailable(){\r\n\t\treturn document.fullscreenEnabled ||\r\n\t\tdocument.webkitFullscreenEnabled ||\r\n\t\tdocument.mozFullScreenEnabled ||\r\n\t\tdocument.msFullscreenEnabled;\r\n\t}\r\n\r\n\tvar expanded = false;\r\n\r\n\tvar backupElementSizes = {\r\n\t\twidth:null,\r\n\t\theight:null,\r\n\t\tmodified: false\r\n\t};\r\n\r\n\t// ie11 doesn't expand gantt root element to fullscreen automatically\r\n\tfunction workaroundIESizing(){\r\n\t\tvar root = gantt.$root;\r\n\t\tif(root.offsetWidth < window.innerWidth){\r\n\t\t\tbackupElementSizes.width = root.style.width;\r\n\t\t\tbackupElementSizes.height = root.style.height;\r\n\t\t\troot.style.width = '100vw';\r\n\t\t\troot.style.height = '100vh';\r\n\t\t\tbackupElementSizes.modified = true;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction workaroundIESizingEnd(){\r\n\t\tvar root = gantt.$root;\r\n\t\tif(backupElementSizes.modified){\r\n\t\t\troot.style.width = backupElementSizes.width;\r\n\t\t\troot.style.height = backupElementSizes.height;\r\n\t\t\tbackupElementSizes.modified = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onFullScreenChange() {\r\n\t\tif(!gantt.$container){\r\n\t\t\t// do nothing if gantt is not yet initialized\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar isGanttExpanded = isExpanded();\r\n\t\tif(isGanttExpanded){\r\n\t\t\texpanded = true;\r\n\t\t\tworkaroundIESizing();\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tgantt.callEvent(\"onExpand\");\r\n\t\t\t});\r\n\t\t}else if (expanded){\r\n\t\t\texpanded = false;\r\n\t\t\tworkaroundIESizingEnd();\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tgantt.callEvent(\"onCollapse\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tgantt.event(document, \"webkitfullscreenchange\", onFullScreenChange);\r\n\tgantt.event(document, \"mozfullscreenchange\", onFullScreenChange);\r\n\tgantt.event(document, \"MSFullscreenChange\", onFullScreenChange);\r\n//For IE on Win 10\r\n\tgantt.event(document, \"fullscreenChange\", onFullScreenChange);\r\n\tgantt.event(document, \"fullscreenchange\", onFullScreenChange);\r\n\r\n\tfunction cantFullscreen(){\r\n\t\tif(!gantt.$container){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif(!isFullscreenAvailable()){\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tvar method = console.warning || console.log;\r\n\t\t\tmethod(\"The `fullscreen` feature not being allowed, or full-screen mode not being supported\");\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgantt.expand = function () {\r\n\t\tif(cantFullscreen()){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!gantt.callEvent(\"onBeforeExpand\", []))\r\n\t\t\treturn;\r\n\t\tvar element = document.body;\r\n\r\n\t\tif (element.requestFullscreen) {\r\n\t\t\telement.requestFullscreen();\r\n\t\t} else if (element.msRequestFullscreen) {\r\n\t\t\telement.msRequestFullscreen();\r\n\t\t} else if (element.mozRequestFullScreen) {\r\n\t\t\telement.mozRequestFullScreen();\r\n\t\t} else if (element.webkitRequestFullscreen) {\r\n\t\t\telement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n\t\t}\r\n\t};\r\n\r\n\tgantt.collapse = function () {\r\n\t\tif(cantFullscreen()){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!isExpanded()){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!gantt.callEvent(\"onBeforeCollapse\", []))\r\n\t\t\treturn;\r\n\r\n\t\tif (document.exitFullscreen) {\r\n\t\t\tdocument.exitFullscreen();\r\n\t\t} else if (document.msExitFullscreen) {\r\n\t\t\tdocument.msExitFullscreen();\r\n\t\t} else if (document.mozCancelFullScreen) {\r\n\t\t\tdocument.mozCancelFullScreen();\r\n\t\t} else if (document.webkitExitFullscreen) {\r\n\t\t\tdocument.webkitExitFullscreen();\r\n\t\t}\r\n\t};\r\n\r\n})();"],"sourceRoot":""}